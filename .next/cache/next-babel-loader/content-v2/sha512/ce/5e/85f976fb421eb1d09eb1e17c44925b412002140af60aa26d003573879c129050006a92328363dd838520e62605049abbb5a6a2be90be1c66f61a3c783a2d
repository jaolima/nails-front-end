{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkSpace\\\\Freelancer\\\\nails-factory\\\\multikart_react_all_in_one\\\\frontend\\\\components\\\\common\\\\Collections\\\\Collection2.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useContext } from \"react\";\nimport Slider from \"react-slick\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport ProductItem from \"../product-box/ProductBox12\";\nimport { Row, Col, Container } from \"reactstrap\";\nimport CartContext from \"../../../helpers/cart\";\nimport { WishlistContext } from \"../../../helpers/wishlist/WishlistContext\";\nimport { CompareContext } from \"../../../helpers/Compare/CompareContext\";\nimport PostLoader from \"../PostLoader\";\nconst GET_PRODUCTS = gql`\n  query products($type: _CategoryType!, $indexFrom: Int!, $limit: Int!) {\n    products(type: $type, indexFrom: $indexFrom, limit: $limit) {\n      items {\n        id\n        title\n        description\n        type\n        brand\n        category\n        price\n        stock\n        new\n        sale\n        discount\n        variants {\n          id\n          sku\n          size\n          color\n          image_id\n        }\n        images {\n          image_id\n          id\n          alt\n          src\n        }\n      }\n    }\n  }\n`;\n\nconst TopCollection = ({\n  type,\n  title,\n  subtitle,\n  designClass,\n  noSlider,\n  spanClass,\n  productSlider\n}) => {\n  const context = useContext(CartContext);\n  const contextWishlist = useContext(WishlistContext);\n  const contextCompare = useContext(CompareContext);\n  const quantity = context.quantity;\n  var {\n    loading,\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 8\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: designClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, noSlider ? __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"title3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, subtitle ? __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 31\n    }\n  }, subtitle) : \"\", __jsx(\"h2\", {\n    className: \"title-inner3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, title), __jsx(\"div\", {\n    className: \"line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  })), !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(\"div\", {\n    className: \"row mx-0 margin-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, __jsx(PostLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  })), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, __jsx(PostLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }\n  })), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, __jsx(PostLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }\n  })), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, __jsx(PostLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }\n  }))) : __jsx(Slider, _extends({}, productSlider, {\n    className: \"product-5 product-m no-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }), data && data.products.items.slice(0, 8).map((product, index) => __jsx(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }, __jsx(ProductItem, {\n    product: product,\n    spanClass: spanClass,\n    addToCompare: () => contextCompare.addToCompare(product),\n    addWishlist: () => contextWishlist.addToWish(product),\n    addCart: () => context.addToCart(product, quantity),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 27\n    }\n  }))))))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"title1 title-gradient  section-t-space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, subtitle ? __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 27\n    }\n  }, subtitle) : \"\", __jsx(\"h2\", {\n    className: \"title-inner1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, title), __jsx(\"hr\", {\n    role: \"tournament6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  })), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, __jsx(Slider, _extends({}, productSlider, {\n    className: \"product-m no-arrow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }), !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(React.Fragment, null, __jsx(PostLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }), __jsx(PostLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }), __jsx(PostLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }\n  })) : data && data.products.items.slice(0, 8).map((product, index) => __jsx(ProductItem, {\n    product: product,\n    spanClass: spanClass,\n    addToCompare: () => contextCompare.addToCompare(product),\n    addWishlist: () => contextWishlist.addToWish(product),\n    key: index,\n    addCart: () => context.addToCart(product, quantity),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 27\n    }\n  })))))))));\n};\n\nexport default TopCollection;","map":{"version":3,"sources":["C:/WorkSpace/Freelancer/nails-factory/multikart_react_all_in_one/frontend/components/common/Collections/Collection2.js"],"names":["React","useContext","Slider","useQuery","gql","ProductItem","Row","Col","Container","CartContext","WishlistContext","CompareContext","PostLoader","GET_PRODUCTS","TopCollection","type","title","subtitle","designClass","noSlider","spanClass","productSlider","context","contextWishlist","contextCompare","quantity","loading","data","variables","indexFrom","limit","products","items","length","slice","map","product","index","addToCompare","addToWish","addToCart"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport Slider from \"react-slick\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport ProductItem from \"../product-box/ProductBox12\";\nimport { Row, Col, Container } from \"reactstrap\";\nimport CartContext from \"../../../helpers/cart\";\nimport { WishlistContext } from \"../../../helpers/wishlist/WishlistContext\";\nimport { CompareContext } from \"../../../helpers/Compare/CompareContext\";\nimport PostLoader from \"../PostLoader\";\n\nconst GET_PRODUCTS = gql`\n  query products($type: _CategoryType!, $indexFrom: Int!, $limit: Int!) {\n    products(type: $type, indexFrom: $indexFrom, limit: $limit) {\n      items {\n        id\n        title\n        description\n        type\n        brand\n        category\n        price\n        stock\n        new\n        sale\n        discount\n        variants {\n          id\n          sku\n          size\n          color\n          image_id\n        }\n        images {\n          image_id\n          id\n          alt\n          src\n        }\n      }\n    }\n  }\n`;\nconst TopCollection = ({\n  type,\n  title,\n  subtitle,\n  designClass,\n  noSlider,\n  spanClass,\n  productSlider,\n}) => {\n  const context = useContext(CartContext);\n  const contextWishlist = useContext(WishlistContext);\n  const contextCompare = useContext(CompareContext);\n  const quantity = context.quantity;\n\n  var { loading, data } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 8,\n    },\n  });\n\n  return (\n    <>\n      <section className={designClass}>\n        {noSlider ? (\n          <Container>\n            <Row>\n              <Col>\n                <div className=\"title3\">\n                  {subtitle ? <h4>{subtitle}</h4> : \"\"}\n                  <h2 className=\"title-inner3\">{title}</h2>\n                  <div className=\"line\"></div>\n                </div>\n                {!data ||\n                !data.products ||\n                !data.products.items ||\n                data.products.items.length === 0 ||\n                loading ? (\n                  <div className=\"row mx-0 margin-default\">\n                    <div className=\"col-xl-3 col-lg-4 col-6\">\n                      <PostLoader />\n                    </div>\n                    <div className=\"col-xl-3 col-lg-4 col-6\">\n                      <PostLoader />\n                    </div>\n                    <div className=\"col-xl-3 col-lg-4 col-6\">\n                      <PostLoader />\n                    </div>\n                    <div className=\"col-xl-3 col-lg-4 col-6\">\n                      <PostLoader />\n                    </div>\n                  </div>\n                ) : (\n                  <Slider\n                    {...productSlider}\n                    className=\"product-5 product-m no-arrow\"\n                  >\n                    {data &&\n                      data.products.items.slice(0, 8).map((product, index) => (\n                        <div key={index}>\n                          <ProductItem\n                            product={product}\n                            spanClass={spanClass}\n                            addToCompare={() =>\n                              contextCompare.addToCompare(product)\n                            }\n                            addWishlist={() =>\n                              contextWishlist.addToWish(product)\n                            }\n                            addCart={() => context.addToCart(product, quantity)}\n                          />\n                        </div>\n                      ))}\n                  </Slider>\n                )}\n              </Col>\n            </Row>\n          </Container>\n        ) : (\n          <>\n            <div className=\"title1 title-gradient  section-t-space\">\n              {subtitle ? <h4>{subtitle}</h4> : \"\"}\n              <h2 className=\"title-inner1\">{title}</h2>\n              <hr role=\"tournament6\" />\n            </div>\n            <Container>\n              <Row>\n                <Col>\n                  <Slider {...productSlider} className=\"product-m no-arrow\">\n                    {!data ||\n                    !data.products ||\n                    !data.products.items ||\n                    data.products.items.length === 0 ||\n                    loading ? (\n                      <>\n                        <PostLoader />\n                        <PostLoader />\n                        <PostLoader />\n                      </>\n                    ) : (\n                      data &&\n                      data.products.items\n                        .slice(0, 8)\n                        .map((product, index) => (\n                          <ProductItem\n                            product={product}\n                            spanClass={spanClass}\n                            addToCompare={() =>\n                              contextCompare.addToCompare(product)\n                            }\n                            addWishlist={() =>\n                              contextWishlist.addToWish(product)\n                            }\n                            key={index}\n                            addCart={() => context.addToCart(product, quantity)}\n                          />\n                        ))\n                    )}\n                  </Slider>\n                </Col>\n              </Row>\n            </Container>\n          </>\n        )}\n      </section>\n    </>\n  );\n};\n\nexport default TopCollection;\n"]},"metadata":{},"sourceType":"module"}