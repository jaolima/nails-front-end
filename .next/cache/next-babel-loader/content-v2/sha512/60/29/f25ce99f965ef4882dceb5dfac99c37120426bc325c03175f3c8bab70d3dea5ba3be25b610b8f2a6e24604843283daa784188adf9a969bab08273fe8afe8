{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkSpace\\\\Freelancer\\\\nails-factory\\\\multikart_react_all_in_one\\\\frontend\\\\pages\\\\shop\\\\common\\\\color.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Collapse } from 'reactstrap';\nimport FilterContext from '../../../helpers/filter/FilterContext';\nconst GET_COLOR = gql`\n    query getColors($type:String)  {\n        getColors(type: $type){\n            colors\n        }\n    }\n`;\n\nconst Color = () => {\n  const context = useContext(FilterContext);\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  var {\n    loading,\n    data\n  } = useQuery(GET_COLOR, {\n    variables: {\n      type: context.state\n    }\n  });\n  return __jsx(\"div\", {\n    className: \"collection-collapse-block open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"collapse-block-title\",\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"colors\"), __jsx(Collapse, {\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"collection-collapse-block-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"color-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, !data || !data.getColors || data.getColors.colors.length === 0 || loading ? __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 33\n    }\n  }, \"Loading\") : data.getColors.colors.map((color, i) => __jsx(\"li\", {\n    className: `${color} ${context.selectedColor === color ? 'active' : ''}`,\n    onClick: () => {\n      context.setSelectedColor(color);\n    },\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  })))))));\n};\n\nexport default Color;","map":{"version":3,"sources":["C:/WorkSpace/Freelancer/nails-factory/multikart_react_all_in_one/frontend/pages/shop/common/color.js"],"names":["React","useState","useContext","useQuery","gql","Collapse","FilterContext","GET_COLOR","Color","context","isOpen","setIsOpen","toggle","loading","data","variables","type","state","getColors","colors","length","map","color","i","selectedColor","setSelectedColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,aAAP,MAA0B,uCAA1B;AAEA,MAAMC,SAAS,GAAGH,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,MAAMI,KAAK,GAAG,MAAM;AAChB,QAAMC,OAAO,GAAGP,UAAU,CAACI,aAAD,CAA1B;AACA,QAAM;AAAA,OAACI,MAAD;AAAA,OAASC;AAAT,MAAsBV,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMW,MAAM,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAA9B;;AACA,MAAI;AAAEG,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBX,QAAQ,CAACI,SAAD,EAAY;AACxCQ,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAEP,OAAO,CAACQ;AADP;AAD6B,GAAZ,CAAhC;AAMA,SACI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAqC,IAAA,OAAO,EAAEL,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,MAAC,QAAD;AAAU,IAAA,MAAM,EAAEF,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,CAACI,IAAD,IAAS,CAACA,IAAI,CAACI,SAAf,IAA4BJ,IAAI,CAACI,SAAL,CAAeC,MAAf,CAAsBC,MAAtB,KAAiC,CAA7D,IAAkEP,OAAnE,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADH,GAGGC,IAAI,CAACI,SAAL,CAAeC,MAAf,CAAsBE,GAAtB,CAA0B,CAACC,KAAD,EAAQC,CAAR,KAC1B;AAAI,IAAA,SAAS,EAAG,GAAED,KAAM,IAAGb,OAAO,CAACe,aAAR,KAA0BF,KAA1B,GAAiC,QAAjC,GAA4C,EAAG,EAA1E;AAA6E,IAAA,OAAO,EAAE,MAAM;AAACb,MAAAA,OAAO,CAACgB,gBAAR,CAAyBH,KAAzB;AAChG,KADG;AACD,IAAA,GAAG,EAAEC,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAJR,CADJ,CADJ,CADJ,CAFJ,CADJ;AAsBH,CAhCD;;AAkCA,eAAef,KAAf","sourcesContent":["import React, { useState ,useContext } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { Collapse } from 'reactstrap';\r\nimport FilterContext from '../../../helpers/filter/FilterContext';\r\n\r\nconst GET_COLOR = gql`\r\n    query getColors($type:String)  {\r\n        getColors(type: $type){\r\n            colors\r\n        }\r\n    }\r\n`;\r\n\r\nconst Color = () => {\r\n    const context = useContext(FilterContext);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    var { loading, data } = useQuery(GET_COLOR, {\r\n        variables: {\r\n            type: context.state\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"collection-collapse-block open\">\r\n            <h3 className=\"collapse-block-title\" onClick={toggle}>colors</h3>\r\n            <Collapse isOpen={isOpen}>\r\n                <div className=\"collection-collapse-block-content\">\r\n                    <div className=\"color-selector\">\r\n                        <ul>\r\n                            {(!data || !data.getColors || data.getColors.colors.length === 0 || loading) ?\r\n                                <h4>Loading</h4>\r\n                                :\r\n                                data.getColors.colors.map((color, i) =>\r\n                                <li className={`${color} ${context.selectedColor === color? 'active' : ''}`} onClick={() => {context.setSelectedColor(color)\r\n                            }} key={i}></li>\r\n                                    \r\n                                )\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Color;"]},"metadata":{},"sourceType":"module"}