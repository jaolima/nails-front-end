{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkSpace\\\\Freelancer\\\\nails-factory\\\\multikart_react_all_in_one\\\\frontend\\\\pages\\\\product-details\\\\product\\\\leftSidebarPage.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport ProductTab from \"../common/product-tab\";\nimport Service from \"../common/service\";\nimport NewProduct from \"../../shop/common/newProduct\";\nimport Slider from \"react-slick\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport ImageZoom from \"../common/image-zoom\";\nimport DetailsWithPrice from \"../common/detail-price\";\nimport Filter from \"../common/filter\";\nimport { Container, Row, Col, Media } from \"reactstrap\";\nconst GET_SINGLE_PRODUCTS = gql`\n  query product($id: Int!) {\n    product(id: $id) {\n      id\n      title\n      description\n      type\n      brand\n      category\n      price\n      new\n      sale\n      discount\n      stock\n      variants {\n        id\n        sku\n        size\n        color\n        image_id\n      }\n      images {\n        alt\n        src\n      }\n    }\n  }\n`;\n\nconst LeftSidebarPage = ({\n  pathId\n}) => {\n  var {\n    loading,\n    data\n  } = useQuery(GET_SINGLE_PRODUCTS, {\n    variables: {\n      id: parseInt(pathId)\n    }\n  });\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    nav1: null,\n    nav2: null\n  });\n  const slider1 = useRef();\n  const slider2 = useRef();\n  var products = {\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    dots: false,\n    arrows: true,\n    fade: true\n  };\n  var productsnav = {\n    slidesToShow: 3,\n    swipeToSlide: true,\n    arrows: false,\n    dots: false,\n    focusOnSelect: true\n  };\n  useEffect(() => {\n    setState({\n      nav1: slider1.current,\n      nav2: slider2.current\n    });\n  }, [data]);\n  const {\n    nav1,\n    nav2\n  } = state;\n\n  const filterClick = () => {\n    document.getElementById(\"filter\").style.left = \"-15px\";\n  };\n\n  const changeColorVar = img_id => {\n    slider2.current.slickGoTo(img_id);\n  };\n\n  return __jsx(\"section\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"collection-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    sm: \"3\",\n    className: \"collection-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, __jsx(Filter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), __jsx(Service, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }), __jsx(NewProduct, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    lg: \"9\",\n    sm: \"12\",\n    xs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, __jsx(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    cl: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    className: \"filter-main-btn mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, __jsx(\"span\", {\n    onClick: filterClick,\n    className: \"filter-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-filter\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }), \" \", \"filter\")))), !data || !data.product || data.product.length === 0 || loading ? \"loading\" : __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, __jsx(Col, {\n    lg: \"6\",\n    className: \"product-thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, __jsx(Slider, _extends({}, products, {\n    asNavFor: nav2,\n    ref: slider => slider1.current = slider,\n    className: \"product-slick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 23\n    }\n  }), data.product.images.map((vari, index) => __jsx(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 27\n    }\n  }, __jsx(ImageZoom, {\n    image: vari,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 29\n    }\n  })))), __jsx(Slider, _extends({\n    className: \"slider-nav\"\n  }, productsnav, {\n    asNavFor: nav1,\n    ref: slider => slider2.current = slider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 23\n    }\n  }), data.product.variants ? data.product.images.map((vari, index) => __jsx(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 31\n    }\n  }, __jsx(Media, {\n    src: `${vari.src}`,\n    key: index,\n    alt: vari.alt,\n    className: \"img-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 33\n    }\n  }))) : \"\")), __jsx(Col, {\n    lg: \"6\",\n    className: \"rtl-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, __jsx(DetailsWithPrice, {\n    item: data.product,\n    changeColorVar: changeColorVar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 23\n    }\n  })))), __jsx(ProductTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default LeftSidebarPage;","map":{"version":3,"sources":["C:/WorkSpace/Freelancer/nails-factory/multikart_react_all_in_one/frontend/pages/product-details/product/leftSidebarPage.js"],"names":["React","useState","useEffect","useRef","ProductTab","Service","NewProduct","Slider","gql","useQuery","ImageZoom","DetailsWithPrice","Filter","Container","Row","Col","Media","GET_SINGLE_PRODUCTS","LeftSidebarPage","pathId","loading","data","variables","id","parseInt","state","setState","nav1","nav2","slider1","slider2","products","slidesToShow","slidesToScroll","dots","arrows","fade","productsnav","swipeToSlide","focusOnSelect","current","filterClick","document","getElementById","style","left","changeColorVar","img_id","slickGoTo","product","length","slider","images","map","vari","index","variants","src","alt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport ProductTab from \"../common/product-tab\";\nimport Service from \"../common/service\";\nimport NewProduct from \"../../shop/common/newProduct\";\nimport Slider from \"react-slick\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport ImageZoom from \"../common/image-zoom\";\nimport DetailsWithPrice from \"../common/detail-price\";\nimport Filter from \"../common/filter\";\nimport { Container, Row, Col, Media } from \"reactstrap\";\n\nconst GET_SINGLE_PRODUCTS = gql`\n  query product($id: Int!) {\n    product(id: $id) {\n      id\n      title\n      description\n      type\n      brand\n      category\n      price\n      new\n      sale\n      discount\n      stock\n      variants {\n        id\n        sku\n        size\n        color\n        image_id\n      }\n      images {\n        alt\n        src\n      }\n    }\n  }\n`;\n\nconst LeftSidebarPage = ({ pathId }) => {\n  var { loading, data } = useQuery(GET_SINGLE_PRODUCTS, {\n    variables: {\n      id: parseInt(pathId),\n    },\n  });\n\n  const [state, setState] = useState({ nav1: null, nav2: null });\n  const slider1 = useRef();\n  const slider2 = useRef();\n\n  var products = {\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    dots: false,\n    arrows: true,\n    fade: true,\n  };\n  var productsnav = {\n    slidesToShow: 3,\n    swipeToSlide: true,\n    arrows: false,\n    dots: false,\n    focusOnSelect: true,\n  };\n\n  useEffect(() => {\n    setState({\n      nav1: slider1.current,\n      nav2: slider2.current,\n    });\n  }, [data]);\n\n  const { nav1, nav2 } = state;\n\n  const filterClick = () => {\n    document.getElementById(\"filter\").style.left = \"-15px\";\n  };\n\n  const changeColorVar = (img_id) => {\n    slider2.current.slickGoTo(img_id);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"collection-wrapper\">\n        <Container>\n          <Row>\n            <Col sm=\"3\" className=\"collection-filter\">\n              <Filter />\n              <Service />\n              {/* <!-- side-bar single product slider start --> */}\n              <NewProduct />\n              {/* <!-- side-bar single product slider end --> */}\n            </Col>\n            <Col lg=\"9\" sm=\"12\" xs=\"12\">\n              <Container fluid={true}>\n                <Row>\n                  <Col cl=\"12\">\n                    <div className=\"filter-main-btn mb-2\">\n                      <span onClick={filterClick} className=\"filter-btn\">\n                        <i className=\"fa fa-filter\" aria-hidden=\"true\"></i>{\" \"}\n                        filter\n                      </span>\n                    </div>\n                  </Col>\n                </Row>\n                {!data ||\n                !data.product ||\n                data.product.length === 0 ||\n                loading ? (\n                  \"loading\"\n                ) : (\n                  <Row>\n                    <Col lg=\"6\" className=\"product-thumbnail\">\n                      <Slider\n                        {...products}\n                        asNavFor={nav2}\n                        ref={(slider) => (slider1.current = slider)}\n                        className=\"product-slick\"\n                      >\n                        {data.product.images.map((vari, index) => (\n                          <div key={index}>\n                            <ImageZoom image={vari} />\n                          </div>\n                        ))}\n                      </Slider>\n                      <Slider\n                        className=\"slider-nav\"\n                        {...productsnav}\n                        asNavFor={nav1}\n                        ref={(slider) => (slider2.current = slider)}\n                      >\n                        {data.product.variants\n                          ? data.product.images.map((vari, index) => (\n                              <div key={index}>\n                                <Media\n                                  src={`${vari.src}`}\n                                  key={index}\n                                  alt={vari.alt}\n                                  className=\"img-fluid\"\n                                />\n                              </div>\n                            ))\n                          : \"\"}\n                      </Slider>\n                    </Col>\n                    <Col lg=\"6\" className=\"rtl-text\">\n                      <DetailsWithPrice\n                        item={data.product}\n                        changeColorVar={changeColorVar}\n                      />\n                    </Col>\n                  </Row>\n                )}\n              </Container>\n              <ProductTab />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </section>\n  );\n};\n\nexport default LeftSidebarPage;\n"]},"metadata":{},"sourceType":"module"}