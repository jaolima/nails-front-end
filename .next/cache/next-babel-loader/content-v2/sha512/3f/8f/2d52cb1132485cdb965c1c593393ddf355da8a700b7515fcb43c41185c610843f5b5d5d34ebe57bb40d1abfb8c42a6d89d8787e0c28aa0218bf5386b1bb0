{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/WorkSpace/Freelancer/nails-factory/multikart_react_all_in_one/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\WorkSpace\\\\Freelancer\\\\nails-factory\\\\multikart_react_all_in_one\\\\frontend\\\\components\\\\common\\\\Collections\\\\Collection5.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\\n            items {\\n                id\\n                title\\n                description\\n                type\\n                brand\\n                category \\n                price\\n                new\\n                sale\\n                stock\\n                discount\\n                variants{\\n                    id\\n                    sku\\n                    size\\n                    color\\n                    image_id\\n                }\\n                images{\\n                    image_id\\n                    id\\n                    alt\\n                    src\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport Slider from 'react-slick';\nimport { Container, Row, Col } from 'reactstrap';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductItem from '../product-box/ProductBox4';\nimport LeftCollection from './LeftCollection';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nimport CartContext from '../../../helpers/cart';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nvar GET_PRODUCTS = gql(_templateObject());\n\nvar ProductSlider = function ProductSlider(_ref) {\n  _s();\n\n  var type = _ref.type,\n      cartClass = _ref.cartClass,\n      designClass = _ref.designClass;\n  var context = useContext(CartContext);\n  var contextWishlist = useContext(WishlistContext);\n  var contextCompare = useContext(CompareContext);\n  var quantity = context.quantity;\n\n  var _useQuery = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 8\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  return __jsx(\"section\", {\n    className: designClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    className: \"partition3 partition_3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    lg: \"4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, __jsx(LeftCollection, {\n    type: type,\n    border: \"card-border\",\n    product: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  })), __jsx(Col, {\n    lg: \"4\",\n    className: \"ccenter-slider border-0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"title4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, __jsx(\"h2\", {\n    className: \"title-inner4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, \"special products\"), __jsx(\"div\", {\n    className: \"line\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 55\n    }\n  }))), __jsx(Slider, {\n    className: \"offer-slider slide-1 center-image-width no-arrow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, data && data.products.items.slice(0, 2).map(function (product, i) {\n    return __jsx(\"div\", {\n      key: i,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }\n    }, __jsx(ProductItem, {\n      product: product,\n      addToCompare: function addToCompare() {\n        return contextCompare.addToCompare(product);\n      },\n      addWishlist: function addWishlist() {\n        return contextWishlist.addToWish(product);\n      },\n      addCart: function addCart() {\n        return context.addToCart(product, quantity);\n      },\n      cartClass: cartClass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 41\n      }\n    }));\n  })))), __jsx(Col, {\n    lg: \"4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, __jsx(LeftCollection, {\n    type: type,\n    border: \"card-border\",\n    product: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  })))));\n};\n\n_s(ProductSlider, \"1kP0Xy/MesX+t2NRc+8hx4CJ564=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductSlider;\nexport default ProductSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductSlider\");","map":{"version":3,"sources":["C:/WorkSpace/Freelancer/nails-factory/multikart_react_all_in_one/frontend/components/common/Collections/Collection5.js"],"names":["React","useContext","Slider","Container","Row","Col","useQuery","gql","ProductItem","LeftCollection","CompareContext","CartContext","WishlistContext","GET_PRODUCTS","ProductSlider","type","cartClass","designClass","context","contextWishlist","contextCompare","quantity","variables","indexFrom","limit","loading","data","products","items","slice","map","product","i","addToCompare","addToWish","addToCart"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport ProductItem from '../product-box/ProductBox4';\r\nimport LeftCollection from './LeftCollection';\r\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\r\nimport CartContext from '../../../helpers/cart';\r\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\r\n\r\nconst GET_PRODUCTS = gql`\r\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\r\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\r\n            items {\r\n                id\r\n                title\r\n                description\r\n                type\r\n                brand\r\n                category \r\n                price\r\n                new\r\n                sale\r\n                stock\r\n                discount\r\n                variants{\r\n                    id\r\n                    sku\r\n                    size\r\n                    color\r\n                    image_id\r\n                }\r\n                images{\r\n                    image_id\r\n                    id\r\n                    alt\r\n                    src\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst ProductSlider = ({ type, cartClass, designClass }) => {\r\n    const context = useContext(CartContext)\r\n    const contextWishlist = useContext(WishlistContext);\r\n    const contextCompare = useContext(CompareContext);\r\n    const quantity = context.quantity;\r\n\r\n    var { loading, data } = useQuery(GET_PRODUCTS, {\r\n        variables: {\r\n            type: type,\r\n            indexFrom: 0,\r\n            limit: 8\r\n        }\r\n    });\r\n\r\n    return (\r\n        <section className={designClass}>\r\n            <Container>\r\n                <Row className=\"partition3 partition_3\">\r\n                    <Col lg=\"4\">\r\n                        <LeftCollection type={type} border=\"card-border\" product={3} />\r\n                    </Col>\r\n                    <Col lg=\"4\" className=\"ccenter-slider border-0\">\r\n                        <div>\r\n                            <div className=\"title4\">\r\n                                <h2 className=\"title-inner4\">special products</h2>\r\n                                <div className=\"line\"><span></span></div>\r\n                            </div>\r\n                            <Slider className=\"offer-slider slide-1 center-image-width no-arrow\">\r\n                                {data && data.products.items.slice(0, 2).map((product, i) =>\r\n                                    <div key={i}>\r\n                                        <ProductItem product={product}\r\n                                                    addToCompare={() => contextCompare.addToCompare(product)}\r\n                                                    addWishlist={() => contextWishlist.addToWish(product)}\r\n                                                    addCart={() => context.addToCart(product,quantity)} cartClass={cartClass} />\r\n                                    </div>\r\n                                )}\r\n                            </Slider>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg=\"4\">\r\n                        <LeftCollection type={type} border=\"card-border\" product={3} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ProductSlider;"]},"metadata":{},"sourceType":"module"}