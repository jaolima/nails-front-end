{"ast":null,"code":"import _extends from \"C:/WorkSpace/Freelancer/nails-factory/multikart_react_all_in_one/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"C:/WorkSpace/Freelancer/nails-factory/multikart_react_all_in_one/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\WorkSpace\\\\Freelancer\\\\nails-factory\\\\multikart_react_all_in_one\\\\frontend\\\\components\\\\common\\\\Collections\\\\Collection1.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\\n            items {\\n                id\\n                title\\n                description \\n                type\\n                brand\\n                category \\n                price\\n                new\\n                stock\\n                sale\\n                discount\\n                variants{\\n                    id\\n                    sku\\n                    size\\n                    color\\n                    image_id\\n                }\\n                images{\\n                    image_id\\n                    id\\n                    alt\\n                    src\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport Slider from 'react-slick';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Product4 } from '../../../services/script';\nimport ProductItem from '../product-box/ProductBox1';\nimport PostLoader from '../PostLoader';\nimport { Row, Col, Container } from 'reactstrap';\nimport CartContext from '../../../helpers/cart';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nvar GET_PRODUCTS = gql(_templateObject());\n\nvar TopCollection = function TopCollection(_ref) {\n  _s();\n\n  var type = _ref.type,\n      title = _ref.title,\n      subtitle = _ref.subtitle,\n      designClass = _ref.designClass,\n      line = _ref.line,\n      noSlider = _ref.noSlider,\n      cartClass = _ref.cartClass,\n      productDetail = _ref.productDetail,\n      noTitle = _ref.noTitle,\n      titleClass = _ref.titleClass,\n      innerTitle = _ref.innerTitle;\n  var context = useContext(CartContext);\n  var contextWishlist = useContext(WishlistContext);\n  var contextCompare = useContext(CompareContext);\n  var quantity = context.quantity;\n\n  var _useQuery = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 8\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: designClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, noSlider ? __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, __jsx(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, noTitle ? '' : __jsx(\"div\", {\n    className: titleClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 41\n    }\n  }, subtitle ? __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 57\n    }\n  }, subtitle) : '', __jsx(\"h2\", {\n    className: innerTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 45\n    }\n  }, title), line ? __jsx(\"div\", {\n    className: \"line\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 49\n    }\n  }) : ''), !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? data && data.products && data.products.items && data.products.items.length === 0 ? __jsx(Col, {\n    xs: \"12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 41\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 45\n    }\n  }, __jsx(\"div\", {\n    className: \"col-sm-12 empty-cart-cls text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 49\n    }\n  }, __jsx(Media, {\n    src: emptySearch,\n    className: \"img-fluid mb-4 mx-auto\",\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 53\n    }\n  }), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 53\n    }\n  }, __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 57\n    }\n  }, \"Your Cart is Empty\")), __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 53\n    }\n  }, \"Explore more shortlist some items.\")))) : __jsx(\"div\", {\n    className: \"row mx-0 margin-default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 41\n    }\n  }, __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 45\n    }\n  }, __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 49\n    }\n  })), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 45\n    }\n  }, __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 49\n    }\n  })), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 45\n    }\n  }, __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 49\n    }\n  })), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 45\n    }\n  }, __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 49\n    }\n  }))) : __jsx(Slider, _extends({}, Product4, {\n    className: \"product-4 product-m no-arrow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }), data && data.products.items.slice(0, 8).map(function (product, index) {\n    return __jsx(\"div\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 45\n      }\n    }, __jsx(ProductItem, {\n      product: product,\n      productDetail: productDetail,\n      addCompare: function addCompare() {\n        return contextCompare.addToCompare(product);\n      },\n      addWishlist: function addWishlist() {\n        return contextWishlist.addToWish(product);\n      },\n      addCart: function addCart() {\n        return context.addToCart(product, quantity);\n      },\n      key: index,\n      cartClass: cartClass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 49\n      }\n    }));\n  }))))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"title1 title-gradient  section-t-space\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, subtitle ? __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 41\n    }\n  }, subtitle) : '', __jsx(\"h2\", {\n    className: \"title-inner1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, title)), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }, data && data.products.items.slice(0, 8).map(function (product, index) {\n    return __jsx(Col, {\n      xl: \"3\",\n      sm: \"6\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    }, __jsx(ProductItem, {\n      product: product,\n      productDetail: productDetail,\n      addCompare: function addCompare() {\n        return contextCompare.addToCompare(product);\n      },\n      addWishlist: function addWishlist() {\n        return contextWishlist.addToWish(product);\n      },\n      addCart: function addCart() {\n        return context.addToCart(product, quantity);\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 45\n      }\n    })));\n  }))))));\n};\n\n_s(TopCollection, \"1kP0Xy/MesX+t2NRc+8hx4CJ564=\", false, function () {\n  return [useQuery];\n});\n\n_c = TopCollection;\nexport default TopCollection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopCollection\");","map":{"version":3,"sources":["C:/WorkSpace/Freelancer/nails-factory/multikart_react_all_in_one/frontend/components/common/Collections/Collection1.js"],"names":["React","useContext","Slider","useQuery","gql","Product4","ProductItem","PostLoader","Row","Col","Container","CartContext","WishlistContext","CompareContext","GET_PRODUCTS","TopCollection","type","title","subtitle","designClass","line","noSlider","cartClass","productDetail","noTitle","titleClass","innerTitle","context","contextWishlist","contextCompare","quantity","variables","indexFrom","limit","loading","data","products","items","length","emptySearch","slice","map","product","index","addToCompare","addToWish","addToCart"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport Slider from 'react-slick';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Product4 } from '../../../services/script'\nimport ProductItem from '../product-box/ProductBox1';\nimport PostLoader from '../PostLoader';\nimport { Row, Col, Container } from 'reactstrap';\nimport CartContext from '../../../helpers/cart';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\n\nconst GET_PRODUCTS = gql`\n    query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\n            items {\n                id\n                title\n                description \n                type\n                brand\n                category \n                price\n                new\n                stock\n                sale\n                discount\n                variants{\n                    id\n                    sku\n                    size\n                    color\n                    image_id\n                }\n                images{\n                    image_id\n                    id\n                    alt\n                    src\n                }\n            }\n        }\n    }\n`;\n\nconst TopCollection = ({ type, title, subtitle, designClass, line, noSlider, cartClass, productDetail, noTitle, titleClass, innerTitle }) => {\n    const context = useContext(CartContext)\n    const contextWishlist = useContext(WishlistContext);\n    const contextCompare = useContext(CompareContext);\n    const quantity = context.quantity;\n\n    var { loading, data } = useQuery(GET_PRODUCTS, {\n        variables: {\n            type: type,\n            indexFrom: 0,\n            limit: 8\n        }\n    });\n\n\n    return (\n        <>\n            <section className={designClass}>\n                {noSlider ?\n                    <Container>\n                        <Row>\n                            <Col>\n                                {\n                                    noTitle ?\n                                        ''\n                                        :\n                                        <div className={titleClass}>\n                                            {subtitle ? <h4>{subtitle}</h4> : ''}\n                                            <h2 className={innerTitle}>{title}</h2>\n                                                {line ?\n                                                <div className=\"line\"></div>\n                                                : ''}\n                                        </div>\n                                }\n\n                                {(!data || !data.products || !data.products.items || data.products.items.length === 0 || loading) ?\n                                    (data && data.products && data.products.items && data.products.items.length === 0) ?\n                                        <Col xs=\"12\">\n                                            <div>\n                                                <div className=\"col-sm-12 empty-cart-cls text-center\">\n                                                    <Media src={emptySearch} className=\"img-fluid mb-4 mx-auto\" alt=\"\" />\n                                                    <h3><strong>Your Cart is Empty</strong></h3>\n                                                    <h4>Explore more shortlist some items.</h4>\n                                                </div>\n                                            </div>\n                                        </Col>\n                                        :\n                                        <div className=\"row mx-0 margin-default\">\n                                            <div className=\"col-xl-3 col-lg-4 col-6\">\n                                                <PostLoader />\n                                            </div>\n                                            <div className=\"col-xl-3 col-lg-4 col-6\">\n                                                <PostLoader />\n                                            </div>\n                                            <div className=\"col-xl-3 col-lg-4 col-6\">\n                                                <PostLoader />\n                                            </div>\n                                            <div className=\"col-xl-3 col-lg-4 col-6\">\n                                                <PostLoader />\n                                            </div>\n                                        </div>\n                                    :\n                                    <Slider {...Product4} className=\"product-4 product-m no-arrow\">\n                                        {data && data.products.items.slice(0, 8).map((product, index) =>\n                                            <div key={index}>\n                                                <ProductItem product={product} productDetail={productDetail}\n                                                    addCompare={() => contextCompare.addToCompare(product)}\n                                                    addWishlist={() => contextWishlist.addToWish(product)}\n                                                    addCart={() => context.addToCart(product, quantity)} key={index} cartClass={cartClass} />\n                                            </div>\n                                        )\n                                        }\n                                    </Slider>\n                                }\n                            </Col>\n                        </Row>\n                    </Container>\n                    :\n                    <>\n                        <div className=\"title1 title-gradient  section-t-space\">\n                            {subtitle ? <h4>{subtitle}</h4> : ''}\n                            <h2 className=\"title-inner1\">{title}</h2>\n                        </div>\n                        <Container>\n                            <Row>\n                                {data && data.products.items.slice(0, 8).map((product, index) =>\n                                    <Col xl=\"3\" sm=\"6\" key={index}>\n                                        <div>\n                                            <ProductItem product={product} productDetail={productDetail}\n                                                addCompare={() => contextCompare.addToCompare(product)}\n                                                addWishlist={() => contextWishlist.addToWish(product)}\n                                                addCart={() => context.addToCart(product, quantity)} key={index} />\n                                        </div>\n                                    </Col>\n                                )\n                                }\n                            </Row>\n                        </Container>\n                    </>\n                }\n\n            </section>\n        </>\n    )\n}\n\n\nexport default TopCollection;"]},"metadata":{},"sourceType":"module"}