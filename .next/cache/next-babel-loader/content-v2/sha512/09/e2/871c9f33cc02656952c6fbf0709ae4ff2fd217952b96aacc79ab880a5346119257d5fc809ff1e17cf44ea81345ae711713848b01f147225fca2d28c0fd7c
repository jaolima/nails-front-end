{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkSpace\\\\Freelancer\\\\nails-factory\\\\multikart_react_all_in_one\\\\frontend\\\\components\\\\common\\\\Collections\\\\TabCollection4.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\";\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\nimport { Col, Container, Media, Row } from \"reactstrap\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport PostLoader from \"../PostLoader\";\nimport { CurrencyContext } from \"../../../helpers/Currency/CurrencyContext\";\nimport { useRouter } from \"next/router\";\nconst GET_PRODUCTS = gql`\n  query products($type: _CategoryType!, $indexFrom: Int!, $limit: Int!) {\n    products(type: $type, indexFrom: $indexFrom, limit: $limit) {\n      items {\n        id\n        title\n        description\n        type\n        brand\n        category\n        price\n        new\n        stock\n        sale\n        discount\n        variants {\n          id\n          sku\n          size\n          color\n          image_id\n        }\n        images {\n          image_id\n          id\n          alt\n          src\n        }\n      }\n    }\n  }\n`;\n\nconst TabContent = ({\n  data,\n  loading,\n  startIndex,\n  endIndex\n}) => {\n  const curContext = useContext(CurrencyContext);\n  const currency = curContext.state;\n  return __jsx(Row, {\n    className: \"product-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, !data || !data.products || !data.products.items || data.products.items.length === 0 || loading ? __jsx(React.Fragment, null, __jsx(PostLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), __jsx(PostLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), __jsx(PostLoader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })) : __jsx(React.Fragment, null, data && data.products.items.slice(startIndex, endIndex).map((item, i) => __jsx(\"div\", {\n    className: \"tab-box\",\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, __jsx(\"div\", {\n    className: \"product-box2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }, __jsx(\"a\", {\n    onClick: () => clickProductDetail(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, __jsx(Media, {\n    className: \"img-fluid blur-up lazyload\",\n    src: item.images[0].src,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }\n  })), __jsx(\"div\", {\n    className: \"media-body align-self-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 23\n    }\n  }, __jsx(\"i\", {\n    className: \"fa fa-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }), \" \", __jsx(\"i\", {\n    className: \"fa fa-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  })), __jsx(\"a\", {\n    onClick: () => clickProductDetail(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 23\n    }\n  }, __jsx(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }, item.title)), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }\n  }, currency.symbol, (item.price * currency.value).toFixed(2)))))))));\n};\n\nconst TabCollection = ({\n  type,\n  bgClass\n}) => {\n  const router = useRouter();\n  const {\n    0: activeTab,\n    1: setActiveTab\n  } = useState(type);\n  const curContext = useContext(CurrencyContext);\n  const currency = curContext.state;\n  var {\n    loading,\n    data\n  } = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: activeTab,\n      indexFrom: 0,\n      limit: 8\n    }\n  });\n\n  const clickProductDetail = product => {\n    const titleProps = product.title.split(\" \").join(\"\");\n    router.push(`/product-details/${product.id}` + \"-\" + `${titleProps}`);\n  };\n\n  return __jsx(\"div\", {\n    className: bgClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, __jsx(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"title4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, __jsx(\"h2\", {\n    className: \"title-inner4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"trending products\"), __jsx(\"div\", {\n    className: \"line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }))), __jsx(Tabs, {\n    className: \"theme-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, __jsx(TabList, {\n    className: \"tabs tab-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, __jsx(Tab, {\n    className: activeTab == type ? \"active\" : \"\",\n    onClick: () => setActiveTab(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, \"winter\"), __jsx(Tab, {\n    className: activeTab == \"greens\" ? \"active\" : \"\",\n    onClick: () => setActiveTab(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, \"greens\"), __jsx(Tab, {\n    className: activeTab == \"various\" ? \"active\" : \"\",\n    onClick: () => setActiveTab(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, \"various\")), __jsx(\"div\", {\n    className: \"tab-content-cls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, __jsx(TabPanel, {\n    className: \"tab-content active default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, __jsx(TabContent, {\n    data: data,\n    loading: loading,\n    startIndex: 0,\n    endIndex: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  })), __jsx(TabPanel, {\n    className: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, __jsx(TabContent, {\n    data: data,\n    loading: loading,\n    startIndex: 4,\n    endIndex: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  })), __jsx(TabPanel, {\n    className: \"tab-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }, __jsx(TabContent, {\n    data: data,\n    loading: loading,\n    startIndex: 2,\n    endIndex: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  })))))))));\n};\n\nexport default TabCollection;","map":{"version":3,"sources":["C:/WorkSpace/Freelancer/nails-factory/multikart_react_all_in_one/frontend/components/common/Collections/TabCollection4.js"],"names":["React","useState","useContext","Tab","TabList","TabPanel","Tabs","Col","Container","Media","Row","useQuery","gql","PostLoader","CurrencyContext","useRouter","GET_PRODUCTS","TabContent","data","loading","startIndex","endIndex","curContext","currency","state","products","items","length","slice","map","item","i","clickProductDetail","images","src","title","symbol","price","value","toFixed","TabCollection","type","bgClass","router","activeTab","setActiveTab","variables","indexFrom","limit","product","titleProps","split","join","push","id"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\r\nimport { Col, Container, Media, Row } from \"reactstrap\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\nimport PostLoader from \"../PostLoader\";\r\nimport { CurrencyContext } from \"../../../helpers/Currency/CurrencyContext\";\r\nimport { useRouter } from \"next/router\";\r\nconst GET_PRODUCTS = gql`\r\n  query products($type: _CategoryType!, $indexFrom: Int!, $limit: Int!) {\r\n    products(type: $type, indexFrom: $indexFrom, limit: $limit) {\r\n      items {\r\n        id\r\n        title\r\n        description\r\n        type\r\n        brand\r\n        category\r\n        price\r\n        new\r\n        stock\r\n        sale\r\n        discount\r\n        variants {\r\n          id\r\n          sku\r\n          size\r\n          color\r\n          image_id\r\n        }\r\n        images {\r\n          image_id\r\n          id\r\n          alt\r\n          src\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst TabContent = ({ data, loading, startIndex, endIndex }) => {\r\n  const curContext = useContext(CurrencyContext);\r\n  const currency = curContext.state;\r\n  return (\r\n    <Row className=\"product-tab\">\r\n      {!data ||\r\n      !data.products ||\r\n      !data.products.items ||\r\n      data.products.items.length === 0 ||\r\n      loading ? (\r\n        <>\r\n          <PostLoader />\r\n          <PostLoader />\r\n          <PostLoader />\r\n        </>\r\n      ) : (\r\n        <>\r\n          {data &&\r\n            data.products.items.slice(startIndex, endIndex).map((item, i) => (\r\n              <div className=\"tab-box\" key={i}>\r\n                <div className=\"product-box2\">\r\n                  <div className=\"media\">\r\n                    <a onClick={() => clickProductDetail(item)}>\r\n                      <Media\r\n                        className=\"img-fluid blur-up lazyload\"\r\n                        src={item.images[0].src}\r\n                        alt=\"\"\r\n                      />\r\n                    </a>\r\n                    <div className=\"media-body align-self-center\">\r\n                      <div className=\"rating\">\r\n                        <i className=\"fa fa-star\"></i>{\" \"}\r\n                        <i className=\"fa fa-star\"></i>{\" \"}\r\n                        <i className=\"fa fa-star\"></i>{\" \"}\r\n                        <i className=\"fa fa-star\"></i>{\" \"}\r\n                        <i className=\"fa fa-star\"></i>\r\n                      </div>\r\n                      <a onClick={() => clickProductDetail(item)}>\r\n                        <h6>{item.title}</h6>\r\n                      </a>\r\n                      <h4>\r\n                        {currency.symbol}\r\n                        {(item.price * currency.value).toFixed(2)}\r\n                      </h4>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </>\r\n      )}\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst TabCollection = ({ type, bgClass }) => {\r\n  const router = useRouter();\r\n  const [activeTab, setActiveTab] = useState(type);\r\n  const curContext = useContext(CurrencyContext);\r\n  const currency = curContext.state;\r\n  var { loading, data } = useQuery(GET_PRODUCTS, {\r\n    variables: {\r\n      type: activeTab,\r\n      indexFrom: 0,\r\n      limit: 8,\r\n    },\r\n  });\r\n\r\n  const clickProductDetail = (product) => {\r\n    const titleProps = product.title.split(\" \").join(\"\");\r\n    router.push(`/product-details/${product.id}` + \"-\" + `${titleProps}`);\r\n  };\r\n\r\n  return (\r\n    <div className={bgClass}>\r\n      <section className=\"p-0\">\r\n        <Container fluid={true}>\r\n          <Row>\r\n            <Col>\r\n              <div className=\"title4\">\r\n                <h2 className=\"title-inner4\">trending products</h2>\r\n                <div className=\"line\">\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n              <Tabs className=\"theme-tab\">\r\n                <TabList className=\"tabs tab-title\">\r\n                  <Tab\r\n                    className={activeTab == type ? \"active\" : \"\"}\r\n                    onClick={() => setActiveTab(type)}\r\n                  >\r\n                    winter\r\n                  </Tab>\r\n                  <Tab\r\n                    className={activeTab == \"greens\" ? \"active\" : \"\"}\r\n                    onClick={() => setActiveTab(type)}\r\n                  >\r\n                    greens\r\n                  </Tab>\r\n                  <Tab\r\n                    className={activeTab == \"various\" ? \"active\" : \"\"}\r\n                    onClick={() => setActiveTab(type)}\r\n                  >\r\n                    various\r\n                  </Tab>\r\n                </TabList>\r\n                <div className=\"tab-content-cls\">\r\n                  <TabPanel className=\"tab-content active default\">\r\n                    <TabContent\r\n                      data={data}\r\n                      loading={loading}\r\n                      startIndex={0}\r\n                      endIndex={8}\r\n                    />\r\n                  </TabPanel>\r\n                  <TabPanel className=\"tab-content\">\r\n                    <TabContent\r\n                      data={data}\r\n                      loading={loading}\r\n                      startIndex={4}\r\n                      endIndex={12}\r\n                    />\r\n                  </TabPanel>\r\n                  <TabPanel className=\"tab-content\">\r\n                    <TabContent\r\n                      data={data}\r\n                      loading={loading}\r\n                      startIndex={2}\r\n                      endIndex={10}\r\n                    />\r\n                  </TabPanel>\r\n                </div>\r\n              </Tabs>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabCollection;\r\n"]},"metadata":{},"sourceType":"module"}