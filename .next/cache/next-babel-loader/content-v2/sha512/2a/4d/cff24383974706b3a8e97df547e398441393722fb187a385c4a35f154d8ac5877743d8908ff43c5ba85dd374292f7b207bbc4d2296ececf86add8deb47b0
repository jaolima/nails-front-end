{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkSpace\\\\Freelancer\\\\nails-factory\\\\multikart_react_all_in_one\\\\frontend\\\\helpers\\\\filter\\\\FilterProvider.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport FilterContext from \"./FilterContext\";\nimport { useRouter } from \"next/router\";\n\nconst FilterProvider = props => {\n  const router = useRouter();\n  const brand = router.query.brand;\n  const color = router.query.color;\n  const size = router.query.size;\n  const category = router.query.category;\n  const min = router.query.min;\n  const max = router.query.max;\n  let sizeParam = size ? size.split(\",\") : null;\n  let param = brand ? brand.split(\",\") : [];\n  const {\n    0: selectedCategory,\n    1: setSelectedCategory\n  } = useState(category ? category : \"fashion\");\n  const {\n    0: selectedBrands,\n    1: setSelectedBrands\n  } = useState(param ? param : []);\n  const {\n    0: selectedColor,\n    1: setSelectedColor\n  } = useState(color ? color : \"\");\n  const {\n    0: selectedSize,\n    1: setSelectedSize\n  } = useState(sizeParam ? sizeParam : []);\n  const {\n    0: selectedPrice,\n    1: setSelectedPrice\n  } = useState({\n    min: min ? min : 0,\n    max: max ? max : 500\n  });\n  const {\n    0: isChecked,\n    1: setIsChecked\n  } = useState(true);\n  const {\n    0: filterChecked,\n    1: setFilterChecked\n  } = useState([{}]);\n\n  const handleBrands = (brand, checked) => {\n    var index = selectedBrands.indexOf(brand);\n\n    if (index > -1) {\n      setIsChecked(!isChecked);\n      setFilterChecked([{\n        brand,\n        checked\n      }]);\n      setSelectedBrands(selectedBrands.filter(e => e !== brand));\n    } else {\n      setIsChecked(!isChecked);\n      setFilterChecked([{\n        brand,\n        checked\n      }]);\n      setSelectedBrands([...selectedBrands, brand]);\n    }\n  };\n\n  const handleSizes = (size, checked) => {\n    var index = selectedSize.indexOf(size);\n\n    if (index > -1) {\n      setIsChecked(!isChecked);\n      setFilterChecked([{\n        size,\n        checked\n      }]);\n      setSelectedSize(selectedSize.filter(e => e !== size));\n    } else {\n      setIsChecked(!isChecked);\n      setFilterChecked([{\n        size,\n        checked\n      }]);\n      setSelectedSize([...selectedSize, size]);\n    }\n  };\n\n  return __jsx(FilterContext.Provider, {\n    value: _objectSpread(_objectSpread({}, props), {}, {\n      state: selectedCategory,\n      setSelectedColor,\n      setSelectedCategory,\n      setSelectedBrands,\n      selectedBrands,\n      selectedColor,\n      selectedPrice,\n      isChecked,\n      filterChecked,\n      selectedSize,\n      setSelectedSize,\n      setSelectedPrice,\n      handleBrands: handleBrands,\n      handleSizes: handleSizes\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default FilterProvider;","map":{"version":3,"sources":["C:/WorkSpace/Freelancer/nails-factory/multikart_react_all_in_one/frontend/helpers/filter/FilterProvider.js"],"names":["React","useState","FilterContext","useRouter","FilterProvider","props","router","brand","query","color","size","category","min","max","sizeParam","split","param","selectedCategory","setSelectedCategory","selectedBrands","setSelectedBrands","selectedColor","setSelectedColor","selectedSize","setSelectedSize","selectedPrice","setSelectedPrice","isChecked","setIsChecked","filterChecked","setFilterChecked","handleBrands","checked","index","indexOf","filter","e","handleSizes","state","children"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport FilterContext from \"./FilterContext\";\r\nimport { useRouter } from \"next/router\";\r\n\r\nconst FilterProvider = (props) => {\r\n  const router = useRouter();\r\n  const brand = router.query.brand;\r\n  const color = router.query.color;\r\n  const size = router.query.size;\r\n  const category = router.query.category;\r\n  const min = router.query.min;\r\n  const max = router.query.max;\r\n  let sizeParam = size ? size.split(\",\") : null;\r\n  let param = brand ? brand.split(\",\") : [];\r\n  const [selectedCategory, setSelectedCategory] = useState(\r\n    category ? category : \"fashion\"\r\n  );\r\n  const [selectedBrands, setSelectedBrands] = useState(param ? param : []);\r\n  const [selectedColor, setSelectedColor] = useState(color ? color : \"\");\r\n  const [selectedSize, setSelectedSize] = useState(sizeParam ? sizeParam : []);\r\n  const [selectedPrice, setSelectedPrice] = useState({\r\n    min: min ? min : 0,\r\n    max: max ? max : 500,\r\n  });\r\n  const [isChecked, setIsChecked] = useState(true);\r\n  const [filterChecked, setFilterChecked] = useState([{}]);\r\n\r\n  const handleBrands = (brand, checked) => {\r\n    var index = selectedBrands.indexOf(brand);\r\n\r\n    if (index > -1) {\r\n      setIsChecked(!isChecked);\r\n      setFilterChecked([{ brand, checked }]);\r\n      setSelectedBrands(selectedBrands.filter((e) => e !== brand));\r\n    } else {\r\n      setIsChecked(!isChecked);\r\n      setFilterChecked([{ brand, checked }]);\r\n      setSelectedBrands([...selectedBrands, brand]);\r\n    }\r\n  };\r\n\r\n  const handleSizes = (size, checked) => {\r\n    var index = selectedSize.indexOf(size);\r\n    if (index > -1) {\r\n      setIsChecked(!isChecked);\r\n      setFilterChecked([{ size, checked }]);\r\n      setSelectedSize(selectedSize.filter((e) => e !== size));\r\n    } else {\r\n      setIsChecked(!isChecked);\r\n      setFilterChecked([{ size, checked }]);\r\n      setSelectedSize([...selectedSize, size]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FilterContext.Provider\r\n      value={{\r\n        ...props,\r\n        state: selectedCategory,\r\n        setSelectedColor,\r\n        setSelectedCategory,\r\n        setSelectedBrands,\r\n        selectedBrands,\r\n        selectedColor,\r\n        selectedPrice,\r\n        isChecked,\r\n        filterChecked,\r\n        selectedSize,\r\n        setSelectedSize,\r\n        setSelectedPrice,\r\n        handleBrands: handleBrands,\r\n        handleSizes: handleSizes,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FilterContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FilterProvider;\r\n"]},"metadata":{},"sourceType":"module"}