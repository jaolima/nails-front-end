{"ast":null,"code":"import _extends from \"C:/WorkSpace/Freelancer/nails-factory/multikart_react_all_in_one/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"C:/WorkSpace/Freelancer/nails-factory/multikart_react_all_in_one/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\WorkSpace\\\\Freelancer\\\\nails-factory\\\\multikart_react_all_in_one\\\\frontend\\\\components\\\\common\\\\Collections\\\\Collection4.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n     query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\\n            items {\\n                id\\n                title\\n                description\\n                type\\n                brand\\n                category \\n                price\\n                new\\n                sale\\n                stock\\n                discount\\n                variants{\\n                    id\\n                    sku\\n                    size\\n                    color\\n                    image_id\\n                }\\n                images{\\n                    image_id\\n                    id\\n                    alt\\n                    src\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport Slider from 'react-slick';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ProductItem from '../product-box/ProductBox4';\nimport { Row, Col, Container } from 'reactstrap';\nimport CartContext from '../../../helpers/cart';\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\nimport PostLoader from '../PostLoader';\nvar GET_PRODUCTS = gql(_templateObject());\n\nvar TopCollection = function TopCollection(_ref) {\n  _s();\n\n  var type = _ref.type,\n      title = _ref.title,\n      subtitle = _ref.subtitle,\n      designClass = _ref.designClass,\n      noSlider = _ref.noSlider,\n      cartClass = _ref.cartClass,\n      productSlider = _ref.productSlider,\n      titleClass = _ref.titleClass,\n      inner = _ref.inner,\n      line = _ref.line;\n  var context = useContext(CartContext);\n  var contextWishlist = useContext(WishlistContext);\n  var contextCompare = useContext(CompareContext);\n  var quantity = context.quantity;\n\n  var _useQuery = useQuery(GET_PRODUCTS, {\n    variables: {\n      type: type,\n      indexFrom: 0,\n      limit: 8\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: designClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, noSlider ? __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, __jsx(Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, __jsx(\"div\", {\n    className: titleClass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, subtitle ? __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 49\n    }\n  }, subtitle) : '', __jsx(\"h2\", {\n    className: inner,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 37\n    }\n  }, title), line ? __jsx(\"div\", {\n    className: \"line\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 41\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 63\n    }\n  })) : __jsx(\"hr\", {\n    role: \"tournament6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 41\n    }\n  })), !data || !data.products || data.products.items.length === 0 || loading ? __jsx(\"div\", {\n    className: \"row mx-0 margin-default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  }, __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 43\n    }\n  }, __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 45\n    }\n  })), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 41\n    }\n  }, __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 45\n    }\n  })), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 41\n    }\n  }, __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 45\n    }\n  })), __jsx(\"div\", {\n    className: \"col-xl-3 col-lg-4 col-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 41\n    }\n  }, __jsx(PostLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 45\n    }\n  }))) : __jsx(Slider, _extends({}, productSlider, {\n    className: \"product-4 product-m no-arrow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }), data && data.products.items.slice(0, 8).map(function (product, index) {\n    return __jsx(\"div\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 45\n      }\n    }, __jsx(ProductItem, {\n      product: product,\n      addToCompare: function addToCompare() {\n        return contextCompare.addToCompare(product);\n      },\n      addWishlist: function addWishlist() {\n        return contextWishlist.addToWish(product);\n      },\n      addCart: function addCart() {\n        return context.addToCart(product, quantity);\n      },\n      cartClass: cartClass,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 49\n      }\n    }));\n  }))))) : __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"title1 title-gradient  section-t-space\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, subtitle ? __jsx(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 41\n    }\n  }, subtitle) : '', __jsx(\"h2\", {\n    className: \"title-inner1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 29\n    }\n  }, title), __jsx(\"hr\", {\n    role: \"tournament6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  })), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, __jsx(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, data && data.products.items.slice(0, 8).map(function (product, index) {\n    return __jsx(Col, {\n      xl: \"3\",\n      sm: \"6\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }\n    }, __jsx(ProductItem, {\n      product: product,\n      addToCompare: function addToCompare() {\n        return contextCompare.addToCompare(product);\n      },\n      addWishlist: function addWishlist() {\n        return contextWishlist.addToWish(product);\n      },\n      addCart: function addCart() {\n        return context.addToCart(product, quantity);\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 45\n      }\n    })));\n  }))))));\n};\n\n_s(TopCollection, \"1kP0Xy/MesX+t2NRc+8hx4CJ564=\", false, function () {\n  return [useQuery];\n});\n\n_c = TopCollection;\nexport default TopCollection;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopCollection\");","map":{"version":3,"sources":["C:/WorkSpace/Freelancer/nails-factory/multikart_react_all_in_one/frontend/components/common/Collections/Collection4.js"],"names":["React","useContext","Slider","useQuery","gql","ProductItem","Row","Col","Container","CartContext","WishlistContext","CompareContext","PostLoader","GET_PRODUCTS","TopCollection","type","title","subtitle","designClass","noSlider","cartClass","productSlider","titleClass","inner","line","context","contextWishlist","contextCompare","quantity","variables","indexFrom","limit","loading","data","products","items","length","slice","map","product","index","addToCompare","addToWish","addToCart"],"mappings":"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","sourcesContent":["    import React, { useContext } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport ProductItem from '../product-box/ProductBox4';\r\nimport { Row, Col, Container } from 'reactstrap';\r\nimport CartContext from '../../../helpers/cart';\r\nimport { WishlistContext } from '../../../helpers/wishlist/WishlistContext';\r\nimport { CompareContext } from '../../../helpers/Compare/CompareContext';\r\nimport PostLoader from '../PostLoader';\r\n\r\nconst GET_PRODUCTS = gql`\r\n     query  products($type:_CategoryType!,$indexFrom:Int! ,$limit:Int!) {\r\n        products (type: $type,indexFrom:$indexFrom ,limit:$limit){\r\n            items {\r\n                id\r\n                title\r\n                description\r\n                type\r\n                brand\r\n                category \r\n                price\r\n                new\r\n                sale\r\n                stock\r\n                discount\r\n                variants{\r\n                    id\r\n                    sku\r\n                    size\r\n                    color\r\n                    image_id\r\n                }\r\n                images{\r\n                    image_id\r\n                    id\r\n                    alt\r\n                    src\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst TopCollection = ({ type, title, subtitle, designClass, noSlider, cartClass, productSlider ,titleClass ,inner ,line}) => {\r\n    const context = useContext(CartContext)\r\n    const contextWishlist = useContext(WishlistContext);\r\n    const contextCompare = useContext(CompareContext);\r\n    const quantity = context.quantity;\r\n\r\n    var { loading, data } = useQuery(GET_PRODUCTS, {\r\n        variables: {\r\n            type: type,\r\n            indexFrom: 0,\r\n            limit: 8\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <>\r\n            <section className={designClass}>\r\n                {noSlider ?\r\n                    <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className={titleClass}>\r\n                                    {subtitle ? <h4>{subtitle}</h4> : ''}\r\n                                    <h2 className={inner}>{title}</h2>\r\n                                    {   line ?\r\n                                        <div className=\"line\"><span></span></div>\r\n                                        :\r\n                                        <hr role=\"tournament6\" />\r\n                                    }\r\n                                </div>\r\n                                {(!data || !data.products || data.products.items.length === 0 || loading) ?\r\n                                    <div className=\"row mx-0 margin-default\">\r\n                                          <div className=\"col-xl-3 col-lg-4 col-6\">\r\n                                            <PostLoader />\r\n                                        </div>\r\n                                        <div className=\"col-xl-3 col-lg-4 col-6\">\r\n                                            <PostLoader />\r\n                                        </div>\r\n                                        <div className=\"col-xl-3 col-lg-4 col-6\">\r\n                                            <PostLoader />\r\n                                        </div>\r\n                                        <div className=\"col-xl-3 col-lg-4 col-6\">\r\n                                            <PostLoader />\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    <Slider {...productSlider} className=\"product-4 product-m no-arrow\">\r\n                                        {data && data.products.items.slice(0, 8).map((product, index) =>\r\n                                            <div key={index}>\r\n                                                <ProductItem product={product}\r\n                                                    addToCompare={() => contextCompare.addToCompare(product)}\r\n                                                    addWishlist={() => contextWishlist.addToWish(product)}\r\n                                                    addCart={() => context.addToCart(product,quantity)}  cartClass={cartClass} />\r\n                                            </div>\r\n                                        )\r\n                                        }\r\n                                    </Slider>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                    :\r\n                    <>\r\n                        <div className=\"title1 title-gradient  section-t-space\">\r\n                            {subtitle ? <h4>{subtitle}</h4> : ''}\r\n                            <h2 className=\"title-inner1\">{title}</h2>\r\n                            <hr role=\"tournament6\" />\r\n                        </div>\r\n                        <Container>\r\n                            <Row>\r\n                                {data && data.products.items.slice(0, 8).map((product, index) =>\r\n                                    <Col xl=\"3\" sm=\"6\" key={index}>\r\n                                        <div>\r\n                                            <ProductItem product={product}\r\n                                                addToCompare={() => contextCompare.addToCompare(product)}\r\n                                                addWishlist={() => contextWishlist.addToWish(product)}\r\n                                                addCart={() => context.addToCart(product,quantity)} key={index} />\r\n                                        </div>\r\n                                    </Col>\r\n                                )\r\n                                }\r\n                            </Row>\r\n                        </Container>\r\n                    </>\r\n                }\r\n\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TopCollection;"]},"metadata":{},"sourceType":"module"}